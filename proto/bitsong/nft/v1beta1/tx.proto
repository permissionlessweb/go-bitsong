syntax = "proto3";;
package bitsong.nft.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/bitsongofficial/go-bitsong/x/nft/types";

service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc CreateCollection(MsgCreateCollection) returns (MsgCreateCollectionResponse);
  rpc MintNFT(MsgMintNFT) returns (MsgMintNFTResponse);
  rpc SendNFT(MsgSendNFT) returns (MsgSendNFTResponse);
  rpc PrintEdition(MsgPrintEdition) returns (MsgPrintEditionResponse);
}

message MsgCreateCollection {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cosmos-sdk/nft/MsgCreateCollection";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string symbol = 1;
  string name = 2;
  string uri = 3;

  string creator = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string minter = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string authority = 6 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgCreateCollectionResponse {
  string denom = 1;
}

message MsgMintNFT {
  option (cosmos.msg.v1.signer) = "minter";
  option (amino.name) = "cosmos-sdk/nft/MsgMintNFT";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string collection = 1;
  string token_id = 2;
  string name = 3;
  string uri = 4;

  string minter = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string recipient = 7 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgMintNFTResponse {
  string collection = 1;
  string token_id = 2;
}

message MsgSendNFT {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "cosmos-sdk/nft/MsgSendNFT";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string collection = 1;
  string token_id = 2;

  string sender = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string recipient = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgSendNFTResponse {}

message MsgPrintEdition {
  option (cosmos.msg.v1.signer) = "minter";
  option (amino.name) = "cosmos-sdk/nft/MsgPrintEdition";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string collection = 1;
  string token_id = 2;

  string minter = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string recipient = 7 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgPrintEditionResponse {
  string collection = 1;
  string token_id = 2;
  uint64 seq = 3;
}